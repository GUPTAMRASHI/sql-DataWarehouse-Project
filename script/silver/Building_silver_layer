/*
========================================================================
Building Silver layer 
========================================================================
understood how these table can be connected
cleaning the data 

========================================================================
*/
truncate table silver.crm_cust_info;
--inserting data in to silver schema table from bronze table
Insert into silver.crm_cust_info
			(cst_id,
			cst_key,
			cst_firstname,
			cst_lastname,
			cst_marital_status,
			cst_gndr,
			cst_create_date)
select cst_id,
	cst_key,
	trim(cst_firstname),
	trim(cst_lastname),
	case when upper(Trim(cst_marital_status) ) ='M' then 'Maried'
		 when upper(Trim(cst_marital_status) ) ='S' then 'Single'
		 else 'n/a'
		end cst_marital_status,
	case when upper(Trim(cst_gndr) ) ='M' then 'Male'
		 when upper(Trim(cst_gndr) ) ='F' then 'Female'
		 else 'n/a'
		 end cst_gndr,
	cst_create_date-- chk it is in date format
from(
	Select  *, row_number() over(partition by cst_id order by cst_create_date) as flag_last 
	from bronze.crm_cust_info
	where cst_id is not null) a
	--group by cst_id,cst_create_date
	where flag_last = 1;
-- 
truncate table silver.crm_prod_info;
insert into silver.crm_prod_info
(prd_id,
	cat_id ,
	prd_key	,
	prd_nm ,
	prd_cost ,
	prd_line ,
	prd_start_dt ,	
	prd_end_dt 
)
select 
	prd_id,
	--prd_key,-- split it into to
	replace(substring (prd_key,1,5),'-','_') as cat_id,--7 product cat no order to connect with the cat table
	substring(prd_key,7,len(prd_key)) as prd_key,-- to connect with the sales table
	prd_nm,
	isnull(prd_cost,0)prd_cost,
	case upper(trim(prd_line)) 
			when 'M' then 'Mountain'
			when 'R' then 'Road'
			when 'S' then 'Other Sales'
			when 'T' then 'Touring'
			Else 'n/a'
		end prd_line,
	prd_start_dt,
	dateadd(day,-1,lead(prd_start_dt) over (partition by prd_key order by prd_start_dt) )as prd_end_dt
from bronze.crm_prod_info;


truncate table silver.crm_sales_details;
Insert into silver.crm_sales_details(
	sls_ord_num ,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price )

Select sls_ord_num ,
	sls_prd_key,
	sls_cust_id,
	case when sls_order_dt<=0 or len(sls_order_dt) != 8 then Null
		 else cast (cast(sls_order_dt as varchar) as date)
		end sls_order_dt,
	case when sls_ship_dt<=0 or len(sls_ship_dt) != 8 then Null
		 else cast (cast(sls_ship_dt as varchar) as date)
		end sls_ship_dt,
	case when sls_due_dt<=0 or len(sls_due_dt) != 8 then Null
		 else cast (cast(sls_due_dt as varchar) as date)
		end sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price From  bronze.crm_sales_details

truncate table silver.erp_cust_az12;
insert into silver.erp_cust_az12
(cid,bdate,gen)
select case when len(cid)>10 then substring(cid,4,len(cid))
			when len(cid)<=10 then cid
			end cid,
			bdate,
		case when (upper(trim(gen)) in('M','MALE')) then 'Male'
			when (upper(trim(gen)) in ('F','FEMALE')) then 'Female'
			else 'n/a'
			end
			gen
						
from bronze.erp_CUST_AZ12
truncate table silver.erp_loc_a101;
insert into silver.erp_loc_a101
(cid,cntry)
Select replace(trim(upper(cid)),'-','') cid,
		case when upper(trim(cntry)) in ('US','USA','UNITED STATES') THEN 'United States'
			when upper(trim(cntry)) in ('UK','UNITED KINGDOM') THEN 'United Kingdom'
			When upper(trim(cntry)) in ('GERMANY', 'GER','DE') THEN 'Germany'
			When upper(trim(cntry)) in ('AUSTRALIA','AUS') THEN 'Australia'
			When upper(trim(cntry)) in ('CANADA','CAN') THEN 'Canada'
			When upper(trim(cntry)) in ('FRANCE','FRA') THEN 'France'
			else 'n/a'
			end  cntry 
from bronze.erp_LOC_A101;

truncate table silver.erp_px_cat_g1v2;
insert into silver.erp_px_cat_g1v2
(id,cat,subcat,maintenance)
Select ID,CAT,SUBCAT,MAINTENANCE from bronze.erp_PX_CAT_G1V2

